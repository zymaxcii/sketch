<!DOCTYPE html>
<html><head>
  <title>www.TheBreadBoard.ca - Arduino Fast Track - Lesson 4</title>
  <script>
      // Use ip address when reading from hard drive
      //var myIPaddress = "http://192.168.1.247/";
      // Use "/" string when using from controller web site
      var myIPaddress = "/";
      var analogAlljson = "analogAlljson";
      var digitalAlljson = "digitalAlljson";

      var analog0 = 0;
      var analog1 = 0;
      var analog2 = 0;
      var analog3 = 0;

      var Gauge = function (b) {
          function l(a, b) { for (var c in b) "object" == typeof b[c] && "[object Array]" !== Object.prototype.toString.call(b[c]) && "renderTo" != c ? ("object" != typeof a[c] && (a[c] = {}), l(a[c], b[c])) : a[c] = b[c] } function q() { z.width = b.width; z.height = b.height; A = z.cloneNode(!0); B = A.getContext("2d"); C = z.width; D = z.height; t = C / 2; u = D / 2; f = t < u ? t : u; A.i8d = !1; B.translate(t, u); B.save(); a.translate(t, u); a.save() } function v(a) {
              var b = new Date; G = setInterval(function () {
                  var c = (new Date - b) / a.duration; 1 < c && (c = 1); var f = ("function" ==
typeof a.delta?a.delta:M[a.delta])(c);a.step(f);1==c&&clearInterval(G)},a.delay||10)}function k(){G&&clearInterval(G);var a=I-n,h=n,c=b.animation;v({delay:c.delay,duration:c.duration,delta:c.fn,step:function(b){n=parseFloat(h)+a*b;E.draw()}})}function e(a){return a*Math.PI/180}function g(b,h,c){c=a.createLinearGradient(0,0,0,c);c.addColorStop(0,b);c.addColorStop(1,h);return c}function p(){var m=93*(f/100),h=f-m,c=91*(f/100),e=88*(f/100),d=85*(f/100);a.save();b.glow&&(a.shadowBlur=h,a.shadowColor=
"rgba(0, 0, 0, 0.5)");a.beginPath();a.arc(0,0,m,0,2*Math.PI,!0);a.fillStyle=g("#ddd","#aaa",m);a.fill();a.restore();a.beginPath();a.arc(0,0,c,0,2*Math.PI,!0);a.fillStyle=g("#fafafa","#ccc",c);a.fill();a.beginPath();a.arc(0,0,e,0,2*Math.PI,!0);a.fillStyle=g("#eee","#f0f0f0",e);a.fill();a.beginPath();a.arc(0,0,d,0,2*Math.PI,!0);a.fillStyle=b.colors.plate;a.fill();a.save()}function w(a){var h=!1;a=0===b.majorTicksFormat.dec?Math.round(a).toString():a.toFixed(b.majorTicksFormat.dec);return 1<b.majorTicksFormat["int"]?
(h=-1<a.indexOf("."),-1<a.indexOf("-")?"-"+(b.majorTicksFormat["int"]+b.majorTicksFormat.dec+2+(h?1:0)-a.length)+a.replace("-",""):""+(b.majorTicksFormat["int"]+b.majorTicksFormat.dec+1+(h?1:0)-a.length)+a):a}function d(){var m=81*(f/100);a.lineWidth=2;a.strokeStyle=b.colors.majorTicks;a.save();if(0===b.majorTicks.length){for(var h=(b.maxValue-b.minValue)/5,c=0;5>c;c++)b.majorTicks.push(w(b.minValue+h*c));b.majorTicks.push(w(b.maxValue))}for(c=0;c<b.majorTicks.length;++c)a.rotate(e(45+c*(270/(b.majorTicks.length-
1)))),a.beginPath(),a.moveTo(0,m),a.lineTo(0,m-15*(f/100)),a.stroke(),a.restore(),a.save();b.strokeTicks&&(a.rotate(e(90)),a.beginPath(),a.arc(0,0,m,e(45),e(315),!1),a.stroke(),a.restore(),a.save())}function J(){var m=81*(f/100);a.lineWidth=1;a.strokeStyle=b.colors.minorTicks;a.save();for(var h=b.minorTicks*(b.majorTicks.length-1),c=0;c<h;++c)a.rotate(e(45+c*(270/h))),a.beginPath(),a.moveTo(0,m),a.lineTo(0,m-7.5*(f/100)),a.stroke(),a.restore(),a.save()}function s(){for(var m=55*(f/100),h=0;h<b.majorTicks.length;++h){var c=
F(m,e(45+h*(270/(b.majorTicks.length-1))));a.font=20*(f/200)+"px Arial";a.fillStyle=b.colors.numbers;a.lineWidth=0;a.textAlign="center";a.fillText(b.majorTicks[h],c.x,c.y+3)}}function x(a){var h=b.valueFormat.dec,c=b.valueFormat["int"];a=parseFloat(a);var f=0>a;a=Math.abs(a);if(0<h){a=a.toFixed(h).toString().split(".");h=0;for(c-=a[0].length;h<c;++h)a[0]="0"+a[0];a=(f?"-":"")+a[0]+"."+a[1]}else{a=Math.round(a).toString();h=0;for(c-=a.length;h<c;++h)a="0"+a;a=(f?"-":"")+a}return a}function F(a,b){var c=
Math.sin(b),f=Math.cos(b);return{x:0*f-a*c,y:0*c+a*f}}function N(){a.save();for(var m=81*(f/100),h=m-15*(f/100),c=0,g=b.highlights.length;c<g;c++){var d=b.highlights[c],r=(b.maxValue-b.minValue)/270,k=e(45+(d.from-b.minValue)/r),r=e(45+(d.to-b.minValue)/r);a.beginPath();a.rotate(e(90));a.arc(0,0,m,k,r,!1);a.restore();a.save();var l=F(h,k),p=F(m,k);a.moveTo(l.x,l.y);a.lineTo(p.x,p.y);var p=F(m,r),n=F(h,r);a.lineTo(p.x,p.y);a.lineTo(n.x,n.y);a.lineTo(l.x,l.y);a.closePath();a.fillStyle=d.color;a.fill();
a.beginPath();a.rotate(e(90));a.arc(0,0,h,k-0.2,r+0.2,!1);a.restore();a.closePath();a.fillStyle=b.colors.plate;a.fill();a.save()}}function K(){var m=12*(f/100),h=8*(f/100),c=77*(f/100),d=20*(f/100),k=4*(f/100),r=2*(f/100),l=function(){a.shadowOffsetX=2;a.shadowOffsetY=2;a.shadowBlur=10;a.shadowColor="rgba(188, 143, 143, 0.45)"};l();a.save();n=0>n?Math.abs(b.minValue-n):0<b.minValue?n-b.minValue:Math.abs(b.minValue)+n;a.rotate(e(45+n/((b.maxValue-b.minValue)/270)));a.beginPath();a.moveTo(-r,-d);a.lineTo(-k,
0);a.lineTo(-1,c);a.lineTo(1,c);a.lineTo(k,0);a.lineTo(r,-d);a.closePath();a.fillStyle=g(b.colors.needle.start,b.colors.needle.end,c-d);a.fill();a.beginPath();a.lineTo(-0.5,c);a.lineTo(-1,c);a.lineTo(-k,0);a.lineTo(-r,-d);a.lineTo(r/2-2,-d);a.closePath();a.fillStyle="rgba(255, 255, 255, 0.2)";a.fill();a.restore();l();a.beginPath();a.arc(0,0,m,0,2*Math.PI,!0);a.fillStyle=g("#f0f0f0","#ccc",m);a.fill();a.restore();a.beginPath();a.arc(0,0,h,0,2*Math.PI,!0);a.fillStyle=g("#e8e8e8","#f5f5f5",h);a.fill()}
function L(){a.save();a.font=40*(f/200)+"px Led";var b=x(y),h=a.measureText("-"+x(0)).width,c=f-33*(f/100),g=0.12*f;a.save();var d=-h/2-0.025*f,e=c-g-0.04*f,h=h+0.05*f,g=g+0.07*f,k=0.025*f;a.beginPath();a.moveTo(d+k,e);a.lineTo(d+h-k,e);a.quadraticCurveTo(d+h,e,d+h,e+k);a.lineTo(d+h,e+g-k);a.quadraticCurveTo(d+h,e+g,d+h-k,e+g);a.lineTo(d+k,e+g);a.quadraticCurveTo(d,e+g,d,e+g-k);a.lineTo(d,e+k);a.quadraticCurveTo(d,e,d+k,e);a.closePath();d=a.createRadialGradient(0,c-0.12*f-0.025*f+(0.12*f+0.045*f)/
2,f/10,0,c-0.12*f-0.025*f+(0.12*f+0.045*f)/2,f/5);d.addColorStop(0,"#888");d.addColorStop(1,"#666");a.strokeStyle=d;a.lineWidth=0.05*f;a.stroke();a.shadowBlur=0.012*f;a.shadowColor="rgba(0, 0, 0, 1)";a.fillStyle="#babab2";a.fill();a.restore();a.shadowOffsetX=0.004*f;a.shadowOffsetY=0.004*f;a.shadowBlur=0.012*f;a.shadowColor="rgba(0, 0, 0, 0.3)";a.fillStyle="#444";a.textAlign="center";a.fillText(b,-0,c);a.restore()}Gauge.Collection.push(this);this.config={renderTo:null,width:200,height:200,title:!1,
maxValue:100,minValue:0,majorTicks:[],minorTicks:10,strokeTicks:!0,units:!1,valueFormat:{"int":3,dec:2},majorTicksFormat:{"int":1,dec:0},glow:!0,animation:{delay:10,duration:250,fn:"cycle"},colors:{plate:"#fff",majorTicks:"#444",minorTicks:"#666",title:"#888",units:"#888",numbers:"#444",needle:{start:"rgba(240, 128, 128, 1)",end:"rgba(255, 160, 122, .9)"}},highlights:[{from:20,to:60,color:"#eee"},{from:60,to:80,color:"#ccc"},{from:80,to:100,color:"#999"}]};var y=0,E=this,n=0,I=0,H=!1;this.setValue=
function(a){n=b.animation?y:a;var d=(b.maxValue-b.minValue)/100;I=a>b.maxValue?b.maxValue+d:a<b.minValue?b.minValue-d:a;y=a;b.animation?k():this.draw();return this};this.setRawValue=function(a){n=y=a;this.draw();return this};this.clear=function(){y=n=I=this.config.minValue;this.draw();return this};this.getValue=function(){return y};this.onready=function(){};l(this.config,b);this.config.minValue=parseFloat(this.config.minValue);this.config.maxValue=parseFloat(this.config.maxValue);b=this.config;n=
y=b.minValue;if(!b.renderTo)throw Error("Canvas element was not specified when creating the Gauge object!");var z=b.renderTo.tagName?b.renderTo:document.getElementById(b.renderTo),a=z.getContext("2d"),A,C,D,t,u,f,B;q();this.updateConfig=function(a){l(this.config,a);q();this.draw();return this};var M={linear:function(a){return a},quad:function(a){return Math.pow(a,2)},quint:function(a){return Math.pow(a,5)},cycle:function(a){return 1-Math.sin(Math.acos(a))},bounce:function(a){a:{a=1-a;for(var b=0,
c=1;;b+=c,c/=2)if(a>=(7-4*b)/11){a=-Math.pow((11-6*b-11*a)/4,2)+Math.pow(c,2);break a}a=void 0}return 1-a},elastic:function(a){a=1-a;return 1-Math.pow(2,10*(a-1))*Math.cos(30*Math.PI/3*a)}},G=null;a.lineCap="round";this.draw=function(){if(!A.i8d){B.clearRect(-t,-u,C,D);B.save();var g={ctx:a};a=B;p();N();J();d();s();b.title&&(a.save(),a.font=24*(f/200)+"px Arial",a.fillStyle=b.colors.title,a.textAlign="center",a.fillText(b.title,0,-f/4.25),a.restore());b.units&&(a.save(),a.font=22*(f/200)+"px Arial",
a.fillStyle=b.colors.units,a.textAlign="center",a.fillText(b.units,0,f/3.25),a.restore());A.i8d=!0;a=g.ctx;delete g.ctx}a.clearRect(-t,-u,C,D);a.save();a.drawImage(A,-t,-u,C,D);if(Gauge.initialized)L(),K(),H||(E.onready&&E.onready(),H=!0);else var e=setInterval(function(){Gauge.initialized&&(clearInterval(e),L(),K(),H||(E.onready&&E.onready(),H=!0))},10);return this}};Gauge.initialized=!1;
(function(){var b=document,l=b.getElementsByTagName("head")[0],q=-1!=navigator.userAgent.toLocaleLowerCase().indexOf("msie"),v="@font-face {font-family: 'Led';src: url('fonts/digital-7-mono."+(q?"eot":"ttf")+"');}",k=b.createElement("style");k.type="text/css";if(q)l.appendChild(k),l=k.styleSheet,l.cssText=v;else{try{k.appendChild(b.createTextNode(v))}catch(e){k.cssText=v}l.appendChild(k);l=k.styleSheet?k.styleSheet:k.sheet||b.styleSheets[b.styleSheets.length-1]}var g=setInterval(function(){if(b.body){clearInterval(g);
var e=b.createElement("div");e.style.fontFamily="Led";e.style.position="absolute";e.style.height=e.style.width=0;e.style.overflow="hidden";e.innerHTML=".";b.body.appendChild(e);setTimeout(function(){Gauge.initialized=!0;e.parentNode.removeChild(e)},250)}},1)})();Gauge.Collection=[];
Gauge.Collection.get=function(b){if("string"==typeof b)for(var l=0,q=this.length;l<q;l++){if((this[l].config.renderTo.tagName?this[l].config.renderTo:document.getElementById(this[l].config.renderTo)).getAttribute("id")==b)return this[l]}else return"number"==typeof b?this[b]:null};function domReady(b){window.addEventListener?window.addEventListener("DOMContentLoaded",b,!1):window.attachEvent("onload",b)}
domReady(function(){function b(b){for(var e=b[0],d=1,g=b.length;d<g;d++)e+=b[d].substr(0,1).toUpperCase()+b[d].substr(1,b[d].length-1);return e}for(var l=document.getElementsByTagName("canvas"),q=0,v=l.length;q<v;q++)if("canv-gauge"==l[q].getAttribute("data-type")){var k=l[q],e={},g,p=parseInt(k.getAttribute("width"),10),w=parseInt(k.getAttribute("height"),10);e.renderTo=k;p&&(e.width=p);w&&(e.height=w);p=0;for(w=k.attributes.length;p<w;p++)if(g=k.attributes.item(p).nodeName,"data-type"!=g&&"data-"==
g.substr(0,5)){var d=g.substr(5,g.length-5).toLowerCase().split("-");if(g=k.getAttribute(g))switch(d[0]){case "colors":d[1]&&(e.colors||(e.colors={}),"needle"==d[1]?(d=g.split(/\s+/),e.colors.needle=d[0]&&d[1]?{start:d[0],end:d[1]}:g):(d.shift(),e.colors[b(d)]=g));break;case "highlights":e.highlights||(e.highlights=[]);g=g.split(",");for(var d=0,J=g.length;d<J;d++){var s=g[d].replace(/^\s+|\s+$/g,"").split(/\s+/),x={};s[0]&&""!=s[0]&&(x.from=s[0]);s[1]&&""!=s[1]&&(x.to=s[1]);s[2]&&""!=s[2]&&(x.color=
s[2]);e.highlights.push(x)}break;case "animation":d[1]&&(e.animation||(e.animation={}),"fn"==d[1]&&/^\s*function\s*\(/.test(g)&&(g=eval("("+g+")")),e.animation[d[1]]=g);break;default:d=b(d);if("onready"==d)continue;if("majorTicks"==d)g=g.split(/\s+/);else if("strokeTicks"==d||"glow"==d)g="true"==g?!0:!1;else if("valueFormat"==d)if(g=g.split("."),2==g.length)g={"int":parseInt(g[0],10),dec:parseInt(g[1],10)};else continue;e[d]=g}}e=new Gauge(e);k.getAttribute("data-value")&&e.setRawValue(parseFloat(k.getAttribute("data-value")));
k.getAttribute("data-onready")&&(e.onready=function(){eval(this.config.renderTo.getAttribute("data-onready"))});e.draw()}});window.Gauge=Gauge;
	
function updateSlider(pwmChannel, pwmvalue) {
    nocache = "&nocache=" + Math.random() * 1000000;
    var xmlhttp;
    if (window.XMLHttpRequest) {xmlhttp = new XMLHttpRequest();}
    else {xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");}
    xmlhttp.open("GET", myIPaddress + pwmChannel + "," + pwmvalue + nocache, true);
    xmlhttp.send();
    document.getElementById(pwmChannel).innerHTML = pwmvalue;
}

function DoCommand(targetElement, command) {
    nocache = "&nocache=" + Math.random() * 1000000;
    var xmlhttp;
    if (window.XMLHttpRequest) {xmlhttp = new XMLHttpRequest();}
    else {xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");}
    xmlhttp.onreadystatechange = function () {
        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
            var jsonObj = JSON.parse(xmlhttp.responseText);
            document.getElementById(targetElement).innerHTML = jsonObj.value.toString();
        }
    }
    xmlhttp.open("GET", myIPaddress + command + nocache, true);
    xmlhttp.send();
}

function GetArduinoDigitalInputs() {
    nocache = "&nocache=" + Math.random() * 1000000;
    var xmlhttp;
    if (window.XMLHttpRequest) { xmlhttp = new XMLHttpRequest(); }
    else { xmlhttp = new ActiveXObject("Microsoft.XMLHTTP"); }
    xmlhttp.onreadystatechange = function ()
    {
        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
            var jsonObj = JSON.parse(xmlhttp.responseText);
            document.getElementById("digital0").innerHTML = jsonObj.digital0.toString();
            document.getElementById("digital1").innerHTML = jsonObj.digital1.toString();
            document.getElementById("digital2").innerHTML = jsonObj.digital2.toString();
            document.getElementById("digital3").innerHTML = jsonObj.digital3.toString();
            document.getElementById("digital4").innerHTML = jsonObj.digital4.toString();
        }
    }
    xmlhttp.open("GET", myIPaddress + digitalAlljson + nocache, true);
    xmlhttp.send();
}

function GetArduinoAnalogInputs()
{
	nocache = "&nocache=" + Math.random() * 1000000;
	var xmlhttp;
	if (window.XMLHttpRequest)
	{ xmlhttp = new XMLHttpRequest(); }
	else {xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");}
    xmlhttp.onreadystatechange = function() 
	{
        if (xmlhttp.readyState == 4 && xmlhttp.status == 200)
        {
;
            var jsonObj = JSON.parse(xmlhttp.responseText);
            analog0 = jsonObj.analog0;
            analog1 = jsonObj.analog1;
            analog2 = jsonObj.analog2;
            analog3 = jsonObj.analog3;
        }
    }
    xmlhttp.open("GET", myIPaddress + analogAlljson + nocache, true);
    xmlhttp.send();
	setTimeout('GetArduinoAnalogInputs()',1000);
}

</script>
<style type="text/css">
    .centerText{
   text-align: center;
}
    .divBorder {
    border: 2px solid;
    border-radius: 15px;
    width: 810px;
    text-align: center;
    box-shadow: 6px 6px 3px #888888
}
    .myRange {
    border: 2px solid;
    height: 10px;
    display: block;
    margin: 20px;
    vertical-align: middle;
    text-align: center;
    border-radius: 5px;
    background-color: #444;
    box-shadow: 6px 6px 3px #888888
}

</style>
</head><body onload="GetArduinoAnalogInputs()">
<div class="divBorder"><h2>Arduino Fast Track - Lesson 4</h2><h2>Control over Ethernet using the Wiznet and ENC26 modules</h2></div>
    <br />
        <div class="divBorder"><table width="800">
        <tr><th>A0</th><th>A1</th><th>A2</th><th>A3</th></tr>
        <tr>
            <td><canvas id="Canvas0"></canvas></td>
            <td><canvas id="Canvas1"></canvas></td>
            <td><canvas id="Canvas2"></canvas></td>
            <td><canvas id="Canvas3"></canvas></td>
        </tr>
    </table></div>
    <br />
    <div class="divBorder"><table  width="400" align="center"><tr>
            <td><input type="button" onclick="DoCommand('myVal', 'getmS')" value="Get milliseconds" /></td>
            <td><div id="myVal">?????????</div></td>
        </tr></table></div>
    <br />
    <div class="divBorder"><table  width="800"><tr>
            <td class="centerText"></td>
            <td class="centerText"><input id="Button8" type="button" onclick="DoCommand('digital0', 'digital0')" value="Out0" title="Click to invert output" /></td>
            <td class="centerText"><input id="Button9" type="button" onclick="DoCommand('digital1', 'digital1')" value="Out1" title="Click to invert output" /></td>
            <td class="centerText"><input id="Button10" type="button" onclick="DoCommand('digital2', 'digital2')" value="Out2" title="Click to invert output"  /></td>
            <td class="centerText"><input id="Button11" type="button" onclick="DoCommand('digital3', 'digital3')" value="In0" title="Click to toggle on/off pullup resistors" /></td>
            <td class="centerText"><input id="Button12" type="button" onclick="DoCommand('digital4', 'digital4')" value="In1" title="Click to toggle on/off pullup resistors" /></td>
        </tr><tr>
            <td class="centerText"><input id="Button7" type="button" onclick="GetArduinoDigitalInputs()" value="Get Values" title="click to retreive digital input and output values"/></td>
            <td class="centerText"><div id="digital0">?</div></td>
            <td class="centerText"><div id="digital1">?</div></td>
            <td class="centerText"><div id="digital2">?</div></td>
            <td class="centerText"><div id="digital3">?</div></td>
            <td class="centerText"><div id="digital4">?</div></td>
        </tr></table></div>
    <br />
       <div class="divBorder"><table width="800"><tr>
            <td class="centerText">0</td><td class="centerText">PWM outputs</td><td class="centerText">1</td>
        </tr><tr>
            <td class="centerText"><div id="Div2"><input id="Range1" class="myRange" type="range" min="0" max="255" step="5" value="128" onchange="updateSlider('pwm0', this.value)" title="Slide to change PWM0 output"/><output id="pwm0">???</output></div></td>
            <td width="300"></td>
            <td class="centerText"><div id="Div3"><input id="Range2" class="myRange" type="range" min="0" max="255" step="5" value="128" onchange="updateSlider('pwm1', this.value)" title="Slide to change PWM1 output"/><output id="pwm1">???</output></div></td>
        </tr></table></div> 
    <script>
        var gauge0 = new Gauge({
            renderTo: 'Canvas0',
            width: 200, height: 200,
            maxValue: 1023,
            valueFormat: { int: 4, dec: 0 },
            glow: true,
            units: 'Count', title: 'Analog 0',
            majorTicks: ['0', '127', '255', '383', '511', '639', '767', '895', '1023'],
            strokeTicks: true,
            highlights: [{from: 00,to: 255,color: 'PaleGreen'}, {from: 256,to: 767,color: 'Khaki'}, {from: 768,to: 1023,color: 'LightSalmon'}],
            animation: {delay: 10, duration: 300,fn: 'bounce' }
        });
        gauge0.onready = function () { setInterval(function () { gauge0.setValue(analog0); }, 200); };
        gauge0.draw();

        var gauge1 = new Gauge({
            renderTo: 'Canvas1',
            width: 200, height: 200,
            maxValue: 1023,
            units: 'Count', title: 'Analog 1',
            valueFormat: { int: 4, dec: 0 },
            glow: true,
            majorTicks: ['0', '127', '255', '383', '511', '639', '767', '895', '1023'],
            strokeTicks: true,
            highlights: [{from: 00,to: 255,color: 'PaleGreen'}, {from: 256,to: 767,color: 'Khaki'}, {from: 768,to: 1023,color: 'LightSalmon'}],
            animation: {delay: 10,duration: 300,fn: 'bounce'}});
        gauge1.onready = function () {setInterval(function () {gauge1.setValue(analog1);}, 200);};
        gauge1.draw();

        var gauge2 = new Gauge({
            renderTo: 'Canvas2',
            width: 200,height: 200,
            maxValue: 1023,
            units: 'Count',title: 'Analog 2',
            valueFormat: { int: 4, dec: 0 },
            glow: true,
            majorTicks: ['0', '127', '255', '383', '511', '639', '767', '895', '1023'],
            strokeTicks: true,
            highlights: [{from: 00,to: 255,color: 'PaleGreen'}, {from: 256,to: 767,color: 'Khaki'}, {from: 768,to: 1023,color: 'LightSalmon'}],
            animation: {delay: 10,duration: 300,fn: 'bounce'}});
        gauge2.onready = function () {setInterval(function () {gauge2.setValue(analog2);}, 200);};
        gauge2.draw();

        var gauge3 = new Gauge({
            renderTo: 'Canvas3',
            width: 200, height: 200,
            maxValue: 1023,
            units: 'Volts', title: 'Analog 3',
            valueFormat: { int: 4, dec: 0 },
            glow: true,
            majorTicks: ['0', '0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'],
            highlights: false,
            glow: false,
            colors: {needle:{ start:'lightgreen',end:'navy'},plate:'lightyellow',title:'green',units:'lightgreen',majorTicks:'darkgreen',minorTicks:'lightgreen',numbers:'darkgreen'},
            animation: { delay: 10,duration: 300,fn: 'elastic'}});
        gauge3.onready = function () {setInterval(function () {gauge3.setValue(analog3);}, 200);};
        gauge3.draw();

</script>
    <br />Page created by Peter Oakes <a href="http://www.TheBreadBoard.ca"> www.theBreadboard.ca </a>
    <br />Credit for the Gauge functionality goes to <a href="https://github.com/Mikhus"> Mykhailo Stadnyk </a>
</body></html>
