/*
 * UV Detector
 * 
 * learnelectronics
 * 11 Feb 2017
 * 
 * www.youtube.com/c/learnelectronics
 */

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH1106.h>


#define OLED_MOSI   9
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 13
Adafruit_SH1106 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);






const unsigned char PROGMEM leLogo [] = {
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xF0, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xF0, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xF0, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xF0, 0x01, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x1C, 0x30, 0x01, 0x80, 0x1F,
0xF0, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x30, 0x00, 0x00, 0x07,
0xF0, 0x01, 0xFF, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x30, 0x00, 0x00, 0x07,
0xF0, 0x01, 0xFF, 0x00, 0x1C, 0x00, 0x70, 0x01, 0x80, 0x07, 0x00, 0x00, 0x30, 0x00, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x1C, 0x00, 0x70, 0x01, 0xC0, 0x07, 0x00, 0x00, 0x30, 0x01, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x70, 0x01, 0x80, 0x07, 0x00, 0x03, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x1E, 0x00, 0x78, 0x00, 0xC0, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x1E, 0x00, 0x70, 0x01, 0xC0, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x01, 0xFF, 0x00, 0x1E, 0x00, 0x70, 0x01, 0xC0, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x00, 0x03, 0x00, 0x0C, 0x00, 0x70, 0x01, 0xC0, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x00, 0x03, 0x80, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x07, 0x00, 0x0F, 0xF0, 0x01, 0xC0, 0x03,
0xF0, 0x00, 0x03, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0xC0, 0x07, 0x80, 0x1F, 0xF8, 0x01, 0xE0, 0x07,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x80, 0x10, 0x3F, 0xFF, 0xFF, 0xFF, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x0F, 0xFF, 0xFF, 0xFF,
0x80, 0x10, 0x3F, 0x9F, 0xFE, 0x7F, 0x03, 0xFF, 0xFE, 0x7F, 0xFF, 0xFC, 0x0F, 0xCF, 0xFE, 0x7F,
0x81, 0xF0, 0x38, 0x01, 0xE0, 0x0C, 0x01, 0x00, 0x60, 0x0E, 0x00, 0x0C, 0x0E, 0x00, 0xE0, 0x07,
0x81, 0xF0, 0x30, 0x00, 0xC0, 0x02, 0x01, 0x00, 0x40, 0x02, 0x00, 0x0C, 0x0C, 0x00, 0x60, 0x03,
0x80, 0x10, 0x30, 0x20, 0xC0, 0x83, 0x03, 0x00, 0x41, 0x02, 0x04, 0x0C, 0x08, 0x10, 0x40, 0x83,
0x80, 0x10, 0x30, 0x00, 0xC0, 0x83, 0x03, 0x01, 0x81, 0x02, 0x04, 0x0C, 0x08, 0x10, 0x60, 0x3F,
0x80, 0x10, 0x30, 0x00, 0x40, 0xFF, 0x03, 0x03, 0x81, 0x02, 0x04, 0x0C, 0x08, 0x1F, 0xE0, 0x07,
0x81, 0xF0, 0x30, 0x20, 0xC0, 0x83, 0x03, 0x03, 0x81, 0x02, 0x04, 0x0C, 0x08, 0x18, 0x7C, 0x03,
0x81, 0xF0, 0x30, 0x20, 0xC0, 0x83, 0x03, 0x03, 0x81, 0x02, 0x04, 0x0C, 0x08, 0x10, 0x60, 0x83,
0x80, 0x10, 0x30, 0x20, 0xC0, 0x83, 0x03, 0x03, 0xC1, 0x02, 0x04, 0x0C, 0x0C, 0x10, 0x60, 0x83,
0x80, 0x10, 0x38, 0x01, 0xE0, 0x07, 0x01, 0x03, 0xC0, 0x06, 0x04, 0x0C, 0x0C, 0x00, 0xE0, 0x03,
0xC0, 0x18, 0x3E, 0x07, 0xF8, 0x1F, 0xC1, 0x07, 0xF0, 0x1F, 0x06, 0x0C, 0x1F, 0x03, 0xF8, 0x0F
};

int uvRaw = 0;
int uvLevel =0;



void setup()   {                
  Serial.begin(9600);
  
  display.begin(SH1106_SWITCHCAPVCC);

  display.display();

 display.clearDisplay();
 display.drawBitmap(0, 0,  leLogo, 128, 32, 1);
 display.display();
 delay(2000);
 display.clearDisplay();

  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.println("  UV Meter");
  display.display();
  delay(2000);
  display.clearDisplay();
  
}
 
  


void loop() {
  uvRaw = analogRead(A0);
  uvLevel = (uvRaw/0.1);
  display.setTextSize(2);
  display.setCursor(0,0);
  
  display.println("  UV Index");

  if(uvRaw<2){
    display.setTextSize(2);
    display.setCursor(0,40);
    display.println("    LOW");
  }

  else if(uvRaw > 2 && uvRaw <6){
    display.setTextSize(2);
    display.setCursor(0,40);
    display.println("    MOD");
  }

  else if(uvRaw>5 && uvRaw<7){
    display.setTextSize(2);
    display.setCursor(0,40);
    display.println("   HIGH");
  }

  else if(uvRaw>5 && uvRaw<8){
    display.setTextSize(2);
    display.setCursor(0,40);
    display.println(" VERY HIGH");

  }

  else{
    display.setTextSize(2);
    display.setCursor(0,40);
    display.println("  EXTREME");
  }

  display.display();
  delay(1000);
  display.clearDisplay();
}



