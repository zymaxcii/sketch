// win_vane.ino
//
//----------------------------------------------
//
//         Sketch Generated by Visuino
//               www.visuino.com
//
//------------------ Source --------------------
//
// WINDVANE FINAL CU SWITCH2.visuino
//
//----------------------------------------------

// won't be able to compile it
// too many missing libraries - mty

#define VISUINO_ARDUINO_NANO
#define _MITOV_DISPLAY_SSD1306_I2C

#include <OpenWire.h>
#include <Mitov.h>
#include <Wire.h>
#include <Mitov_Basic_I2C.h>
#include <Mitov_Math.h>
#include <Mitov_Display_SSD1306_I2C.h>
#include <Mitov_Graphics.h>
#include <Mitov_Graphics_Monochrome.h>
#include <Fonts\Fixed\GraphicsFont5x7.h>
#include <Mitov_Timing.h>
#include <Mitov_LogicFlipFlops.h>
#include <Mitov_Button.h>


// Shared Component Member Variables

namespace ComponentVariables
{
class
{
public:
  bool Value1 : 1;
  bool Value2 : 1;
  bool Value3 : 1;
  bool Value4 : 1;
  bool Value5 : 1;
  bool Value6 : 1;
  bool Value7 : 1;
  bool Value8 : 1;
} BitFields;

class Variable1
{
public:
  inline static bool GetValue() { return BitFields.Value1; }
  inline static void SetValue( bool AValue ) { BitFields.Value1 = AValue; }

};

class Variable2
{
public:
  inline static bool GetValue() { return BitFields.Value2; }
  inline static void SetValue( bool AValue ) { BitFields.Value2 = AValue; }

};

class Variable3
{
public:
  inline static bool GetValue() { return BitFields.Value3; }
  inline static void SetValue( bool AValue ) { BitFields.Value3 = AValue; }

};

class Variable4
{
public:
  inline static bool GetValue() { return BitFields.Value4; }
  inline static void SetValue( bool AValue ) { BitFields.Value4 = AValue; }

};

class Variable5
{
public:
  inline static bool GetValue() { return BitFields.Value5; }
  inline static void SetValue( bool AValue ) { BitFields.Value5 = AValue; }

};

class Variable6
{
public:
  inline static bool GetValue() { return BitFields.Value6; }
  inline static void SetValue( bool AValue ) { BitFields.Value6 = AValue; }

};

class Variable7
{
public:
  inline static bool GetValue() { return BitFields.Value7; }
  inline static void SetValue( bool AValue ) { BitFields.Value7 = AValue; }

};

class Variable8
{
public:
  inline static bool GetValue() { return BitFields.Value8; }
  inline static void SetValue( bool AValue ) { BitFields.Value8 = AValue; }

};


class Shared_bool_0 : public ::ComponentVariables::Variable1
{
protected:
  static bool FValue;

public:
  inline static bool GetVariableValue( const bool AInitialValue )
  {
    if( ::ComponentVariables::Variable1::GetValue() )
      return FValue;

    return AInitialValue;
  }

  inline static void SetVariableValue( const bool AValue ) { FValue = AValue; ::ComponentVariables::Variable1::SetValue( true ); }
  inline static bool &GetReference() { return FValue; }

  inline Shared_bool_0() { ::ComponentVariables::Variable1::SetValue( false ); }

};

bool Shared_bool_0::FValue;

} // ComponentVariables

// Arduino Constant Declarations

namespace VisuinoConstants
{
class FloatValue4
{
public:
    inline static constexpr float GetValue() { return 0.811999976634979; }
};

class FloatValue2
{
public:
    inline static constexpr float GetValue() { return -180; }
};

class FloatValue0
{
public:
    inline static constexpr float GetValue() { return 0; }
};

class FloatValue3
{
public:
    inline static constexpr float GetValue() { return 180; }
};

class FloatValue1
{
public:
    inline static constexpr float GetValue() { return 1; }
};

class TextValue2
{
public:
    inline static constexpr const char *GetValue() { return "N-E"; }
};

class TextValue4
{
public:
    inline static constexpr const char *GetValue() { return "S-W"; }
};

class TextValue6
{
public:
    inline static constexpr const char *GetValue() { return "NORTH"; }
};

class TextValue0
{
public:
    inline static constexpr const char *GetValue() { return "WEST"; }
};

class TextValue3
{
public:
    inline static constexpr const char *GetValue() { return "N-W"; }
};

class TextValue1
{
public:
    inline static constexpr const char *GetValue() { return "EAST"; }
};

class TextValue5
{
public:
    inline static constexpr const char *GetValue() { return "S-E"; }
};

class TextValue7
{
public:
    inline static constexpr const char *GetValue() { return "SOUTH"; }
};

} // VisuinoConstants

// Pin Call Declarations

namespace PinCalls
{
class PinCallerReceive0
{
public:
  void Notify( void *_Data );

};
class PinCallerReceive1
{
public:
  void Notify( void *_Data );

};
class PinCallerReceive2
{
public:
  void Notify( void *_Data );

};
class PinCallerReceive3
{
public:
  void Notify( void *_Data );

};
class PinCallerReceive4
{
public:
  void Notify( void *_Data );

};
class PinCallerReceive5
{
public:
  void Notify( void *_Data );

};
} // PinCalls

// Call Chains

namespace CallChains
{
class Render1
{
public:
  inline static uint32_t Count() { return 0; }
  static void Call();

};
} // CallChains

// Arduino Board Declarations

namespace BoardDeclarations
{
namespace Types
{
typedef Mitov::ArduinoDigitalOutputChannel<
  Mitov::ConstantProperty<22, bool, false>, // IsAnalog
  Mitov::ConstantProperty<24, bool, false>, // IsCombinedInOut
  Mitov::ConstantProperty<21, bool, false>, // IsOpenDrain
  Mitov::ConstantProperty<26, bool, false>, // IsOutput
  Mitov::ConstantProperty<20, bool, false>, // IsPullDown
  Mitov::ConstantProperty<5, bool, false >, // IsPullUp
  Mitov::ConstantProperty<23, bool, false>, // IsRawInput
  Mitov::DigitalPin_EmbeddedPinImplementation<6, ::PinCalls::PinCallerReceive0 >, // OutputPin
  7 // PIN
  > ArduinoDigitalChannel_7;
} // Types

namespace Instances
{
Types::ArduinoDigitalChannel_7 ArduinoDigitalChannel_7;
} // Instances

namespace Types
{
typedef Mitov::ArduinoAnalogInputChannel<0, Mitov::AnalogPin_EmbeddedPinImplementation<6, ::PinCalls::PinCallerReceive1 >> ArduinoAnalogInputChannel_0;
} // Types

namespace Instances
{
Types::ArduinoAnalogInputChannel_0 ArduinoAnalogInputChannel_0;
} // Instances

} // BoardDeclarations

// Declarations

namespace Declarations
{
namespace Types
{
typedef Mitov::MapRange<
  Mitov::ConstantProperty<5, bool, true >, // Enabled
  Mitov::NestedProperty<9, Mitov::ValueRange<
    Mitov::ConstantPropertyFloat<8, float, ::VisuinoConstants::FloatValue1 >, // Value_Max
    Mitov::ConstantPropertyFloat<7, float, ::VisuinoConstants::FloatValue0 > // Value_Min
     > >, // InputRange
  Mitov::AnalogPin_EmbeddedPinImplementation<3, ::PinCalls::PinCallerReceive2 >, // OutputPin
  Mitov::NestedProperty<13, Mitov::ValueRange<
    Mitov::ConstantPropertyFloat<12, float, ::VisuinoConstants::FloatValue3 >, // Value_Max
    Mitov::ConstantPropertyFloat<11, float, ::VisuinoConstants::FloatValue2 > // Value_Min
     > > // OutputRange
   > MapRange1;
} // Types

namespace Instances
{
Types::MapRange1 MapRange1;
} // Instances

namespace Types
{
typedef Mitov::DisplaySSD1306<
  Mitov::DisplaySSD1306Buffered<Mitov::DisplaySSD1306_Up<Mitov::Display_odtSSD1306_I2C<
  TwoWire, // 0_I2C_TYPE_PIN
  Wire, // 1_I2C_NAME_PIN
  Mitov::ConstantProperty<28, uint8_t, 60 >, // Address
  Mitov::ConstantProperty<16, Mitov::TArduinoMonochromeColor, Mitov::tmcBlack >, // BackgroundColor
  Mitov::ConstantPropertyFloat<11, float, ::VisuinoConstants::FloatValue4 >, // Contrast
  Mitov::EmbeddedCallChain<CallChains::Render1 >, // Elements_Render
  64, // Height
  Mitov::ConstantProperty<25, bool, true >, // PowerOn
  Mitov::NestedProperty<15, Mitov::TArduinoDisplaySSD1306PreChargePeriod<
    Mitov::ConstantProperty<13, uint32_t, 1 >, // Phase1
    Mitov::ConstantProperty<14, uint32_t, 15 > // Phase2
     > >, // PreChargePeriod
  Mitov::DisplaySSD1306NoReset<Mitov::DigitalPin_NoImplementation<4 > >, // ResetOutputPin
  Mitov::NestedProperty<24, Mitov::TGraphicsTextSettings<
    Mitov::ConstantProperty<23, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // BackgroundColor
    Mitov::ConstantProperty<22, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
    Mitov::FixedSizeFont<GraphicsFont5x7, 6, 8>, // Font
    Mitov::ConstantProperty<19, uint32_t, 1 >, // Size
    Mitov::ConstantProperty<21, bool, false >, // UseCodePage437Symbols
    Mitov::ConstantProperty<20, bool, true > // Wrap
     > >, // Text
  Mitov::ConstantProperty<10, bool, false >, // UseChargePump
  128 // Width
  >, 128, 64>, 128, 64>, 128, 64, // EMBEDDED
  0x12, 0x07 // PARAM
   > DisplayOLED1;
} // Types

namespace Instances
{
Types::DisplayOLED1 DisplayOLED1;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementFillScreen<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcBlack >, // Color
  Mitov::ConstantProperty<2, bool, true > // Enabled
   > TArduinoMonochromeGraphicsElementFillScreen1;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementFillScreen1 TArduinoMonochromeGraphicsElementFillScreen1;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawEllipse<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<10, bool, false >, // Centered
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::ConstantProperty<2, bool, true >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::ConstantProperty<9, uint32_t, 39 >, // Height
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 45 >, // Width
  Mitov::ConstantProperty<6, int32_t, 42 >, // X
  Mitov::ConstantProperty<7, int32_t, 15 > // Y
   > TArduinoMonochromeGraphicsDrawEllipse1;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsDrawEllipse1 TArduinoMonochromeGraphicsDrawEllipse1;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::ConstantProperty<2, bool, true >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue0 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 14 >, // X
  Mitov::ConstantProperty<7, int32_t, 32 > // Y
   > TArduinoMonochromeGraphicsElementDrawText1;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText1 TArduinoMonochromeGraphicsElementDrawText1;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::ConstantProperty<2, bool, true >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue1 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 92 >, // X
  Mitov::ConstantProperty<7, int32_t, 32 > // Y
   > TArduinoMonochromeGraphicsElementDrawText2;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText2 TArduinoMonochromeGraphicsElementDrawText2;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::SharedVariableProperty<2, bool, true, ::ComponentVariables::Shared_bool_0 >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue2 >, // Text
  Mitov::ConstantProperty<11, bool, true >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 89 >, // X
  Mitov::ConstantProperty<7, int32_t, 12 > // Y
   > TArduinoMonochromeGraphicsElementDrawText3;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText3 TArduinoMonochromeGraphicsElementDrawText3;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::SharedVariableProperty<2, bool, true, ::ComponentVariables::Shared_bool_0 >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue3 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 23 >, // X
  Mitov::ConstantProperty<7, int32_t, 12 > // Y
   > TArduinoMonochromeGraphicsElementDrawText4;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText4 TArduinoMonochromeGraphicsElementDrawText4;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::SharedVariableProperty<2, bool, true, ::ComponentVariables::Shared_bool_0 >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue4 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 23 >, // X
  Mitov::ConstantProperty<7, int32_t, 49 > // Y
   > TArduinoMonochromeGraphicsElementDrawText5;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText5 TArduinoMonochromeGraphicsElementDrawText5;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::SharedVariableProperty<2, bool, true, ::ComponentVariables::Shared_bool_0 >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue5 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 89 >, // X
  Mitov::ConstantProperty<7, int32_t, 49 > // Y
   > TArduinoMonochromeGraphicsElementDrawText6;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText6 TArduinoMonochromeGraphicsElementDrawText6;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawAngledLine<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::VariablePropertyFloat<9, float, ::VisuinoConstants::FloatValue0 >, // Angle
  Mitov::ConstantProperty<7, int32_t, 0 >, // Begin
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::ConstantProperty<2, bool, true >, // Enabled
  Mitov::ConstantProperty<8, int32_t, 20 >, // End
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<5, int32_t, 64 >, // X
  Mitov::ConstantProperty<6, int32_t, 32 > // Y
   > TArduinoMonochromeGraphicsDrawAngledLine1;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsDrawAngledLine1 TArduinoMonochromeGraphicsDrawAngledLine1;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::ConstantProperty<2, bool, true >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue6 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 50 >, // X
  Mitov::ConstantProperty<7, int32_t, 3 > // Y
   > TArduinoMonochromeGraphicsElementDrawText7;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText7 TArduinoMonochromeGraphicsElementDrawText7;
} // Instances

namespace Types
{
typedef Mitov::GraphicsElementDrawText<
  Declarations::Types::DisplayOLED1, // 0_TYPE_OWNER
  Declarations::Instances::DisplayOLED1, // 1_NAME_OWNER
  Mitov::ConstantProperty<4, Mitov::TArduinoMonochromeColor, Mitov::tmcWhite >, // Color
  Mitov::ConstantProperty<2, bool, true >, // Enabled
  Mitov::ConstantProperty<5, Mitov::TArduinoMonochromeColor, Mitov::tmcNone >, // FillColor
  Mitov::NoFont, // Font
  Mitov::MonochromeColorOperations, // OPERATIONS
  Mitov::ConstantProperty<8, uint32_t, 1 >, // Size
  Mitov::ConstantPropertyString<9, ::VisuinoConstants::TextValue7 >, // Text
  Mitov::ConstantProperty<11, bool, false >, // UseCodePage437Symbols
  Mitov::ConstantProperty<10, bool, true >, // Wrap
  Mitov::ConstantProperty<6, int32_t, 50 >, // X
  Mitov::ConstantProperty<7, int32_t, 58 > // Y
   > TArduinoMonochromeGraphicsElementDrawText8;
} // Types

namespace Instances
{
Types::TArduinoMonochromeGraphicsElementDrawText8 TArduinoMonochromeGraphicsElementDrawText8;
} // Instances

namespace Types
{
typedef Mitov::DetectEdge<
  Mitov::ConstantProperty<4, bool, true >, // Enabled
  Mitov::TypedVariable<7, bool, ::ComponentVariables::Variable2 >, // FLastValue
  Mitov::ClockPin_EmbeddedPinImplementation<3, ::PinCalls::PinCallerReceive3 >, // OutputPin
  Mitov::ConstantProperty<6, bool, true > // Rising
   > DetectEdge1;
} // Types

namespace Instances
{
Types::DetectEdge1 DetectEdge1;
} // Instances

namespace Types
{
typedef Mitov::TFlipFlop<
  Mitov::TypedVariable<10, bool, ::ComponentVariables::Variable5 >, // FToggleValue
  Mitov::TypedVariableValue<5, bool, ::ComponentVariables::Variable4, false >, // InitialValue
  Mitov::DigitalPin_NoImplementation<4 >, // InvertedOutputPin
  Mitov::DigitalPin_EmbeddedPinImplementation_ChangeOnly<3, ::PinCalls::PinCallerReceive4, Mitov::TypedVariable<0, bool, ::ComponentVariables::Variable3 > > // OutputPin
   > TFlipFlop1;
} // Types

namespace Instances
{
Types::TFlipFlop1 TFlipFlop1;
} // Instances

namespace Types
{
typedef Mitov::Button<
  Mitov::ConstantProperty<5, uint32_t, 50 >, // DebounceInterval
  Mitov::TypedVariable<6, bool, ::ComponentVariables::Variable7 >, // FLastValue
  Mitov::TypedVariable<8, bool, ::ComponentVariables::Variable8 >, // FValue
  Mitov::DigitalPin_EmbeddedPinImplementation_ChangeOnly<3, ::PinCalls::PinCallerReceive5, Mitov::TypedVariable<0, bool, ::ComponentVariables::Variable6 > > // OutputPin
   > Button1;
} // Types

namespace Instances
{
Types::Button1 Button1;
} // Instances

} // Declarations

// Call Chains

namespace CallChains
{
void Render1::Call()
{
}

} // CallChains

// Pin Call Implementations

namespace PinCalls
{
void PinCallerReceive0::Notify( void *_Data )
{
  Declarations::Instances::Button1.InputPin_o_Receive( _Data );
}

void PinCallerReceive1::Notify( void *_Data )
{
  Declarations::Instances::MapRange1.InputPin_o_Receive( _Data );
}

void PinCallerReceive2::Notify( void *_Data )
{
  Declarations::Instances::TArduinoMonochromeGraphicsElementFillScreen1.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsDrawEllipse1.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText1.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText2.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText3.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText4.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText5.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText6.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsDrawAngledLine1.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsDrawAngledLine1.Angle().InputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText7.ClockInputPin_o_Receive( _Data );
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText8.ClockInputPin_o_Receive( _Data );
}

void PinCallerReceive3::Notify( void *_Data )
{
  Declarations::Instances::TFlipFlop1.ClockInputPin_o_Receive( _Data );
}

void PinCallerReceive4::Notify( void *_Data )
{
  Declarations::Instances::TArduinoMonochromeGraphicsElementDrawText3.Enabled().InputPin_o_Receive( _Data );
}

void PinCallerReceive5::Notify( void *_Data )
{
  Declarations::Instances::DetectEdge1.InputPin_o_Receive( _Data );
}

} // PinCalls

namespace ComponentsHardware
{
void SystemUpdateHardware()
{
}
} // ComponentsHardware

//The setup function is called once at startup of the sketch
void setup()
{
  Wire.begin();

  BoardDeclarations::Instances::ArduinoDigitalChannel_7.SystemInit();
  BoardDeclarations::Instances::ArduinoAnalogInputChannel_0.SystemInit();
  Declarations::Instances::DisplayOLED1.SystemInit();

  BoardDeclarations::Instances::ArduinoDigitalChannel_7.SystemStart();
  BoardDeclarations::Instances::ArduinoAnalogInputChannel_0.SystemStart();
  Declarations::Instances::DisplayOLED1.SystemStart();
  Declarations::Instances::TFlipFlop1.SystemStart();
  Declarations::Instances::Button1.SystemStart();
}

// The loop function is called in an endless loop
void loop()
{
  BoardDeclarations::Instances::ArduinoDigitalChannel_7.SystemLoopBegin();
  BoardDeclarations::Instances::ArduinoAnalogInputChannel_0.SystemLoopBegin();
  Declarations::Instances::Button1.SystemLoopBegin();
  Declarations::Instances::DisplayOLED1.SystemLoopEnd();
}
